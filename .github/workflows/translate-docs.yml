name: Translate Korean Docs to English

on:
  push:
    branches: [ master, main ]
    paths:
      - 'docs/**/*.md'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'docs/**/*.md'
  workflow_dispatch:
    inputs:
      force_translate:
        description: 'Force translate all files (ignore skip-existing)'
        required: false
        default: false
        type: boolean
      ssl_verify:
        description: 'Enable SSL certificate verification'
        required: false
        default: true
        type: boolean
      debug_mode:
        description: 'Enable debug mode to save chunk files'
        required: false
        default: false
        type: boolean
      pr_title:
        description: 'Custom PR title'
        required: false
        default: '📚 Update English documentation translations'
        type: string
      llm_model:
        description: 'Target LLM model'
        required: false
        default: 'exaone3.5:7.8b'
        type: string
      specific_files:
        description: 'Specific files to translate (comma-separated). Example: "docs/file1.md,docs/file2.md". Leave empty to translate all files.'
        required: false
        default: ''
        type: string
      base_branch:
        description: 'Base branch to commit to (leave empty to use current branch)'
        required: false
        default: ''
        type: string
      create_pr:
        description: 'Create pull request instead of direct commit'
        required: false
        default: false
        type: boolean
permissions:
  contents: write
  pull-requests: write

jobs:
  translate:
    runs-on: macOS  # Use self-hosted runner for local Ollama access
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Ollama Server
      shell: bash
      run: |
        # Start Ollama server if not running
        if ! pgrep -x "ollama" > /dev/null; then
          echo "🚀 Starting Ollama server..."
          ollama serve &
          sleep 10
        else
          echo "✅ Ollama server is already running"
        fi
        
        # Verify server is accessible
        echo "🔍 Checking Ollama server accessibility..."
        for i in {1..5}; do
          if curl -s http://localhost:11434/api/tags > /dev/null; then
            echo "✅ Ollama server is accessible"
            break
          else
            echo "⏳ Waiting for Ollama server... (attempt $i/5)"
            sleep 2
          fi
        done

    - name: Translate Korean docs to English
      uses: ./  # Use the local action
      with:
        ollama-url: 'http://localhost:11434'
        model: ${{ inputs.llm_model }}
        context-length: 8192
        source-dir: 'docs'
        target-dir: 'docs-en'
        file-pattern: '**/*.md'
        specific-files: ${{ inputs.specific_files }}
        temperature: 0
        max-retries: 3
        skip-existing: ${{ !inputs.force_translate }}
        ssl-verify: ${{ inputs.ssl_verify }}
        debug-mode: ${{ inputs.debug_mode }}
        create-pr: ${{ inputs.create_pr }}
        pr-title: ${{ inputs.pr_title }}
        pr-branch: 'auto-translate-${{ github.run_number }}'
        base-branch: ${{ inputs.base_branch || github.ref_name }}
        commit-message: 'docs: Auto-translate Korean documents to English'
        github-token: ${{ secrets.GITHUB_TOKEN }}
      id: translate

    - name: Upload translated files as artifact
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: translated-docs-${{ github.run_number }}
        path: docs-en/
        retention-days: 30
        if-no-files-found: ignore

    - name: Upload debug files as artifact
      if: always() && inputs.debug_mode
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: debug-files-${{ github.run_number }}
        path: |
          debug_originals/
          debug_translations/
          debug_comparisons/
        retention-days: 7
        if-no-files-found: ignore

    - name: Translation Summary
      if: always()
      run: |
        echo "## 🔄 Translation Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Translated files**: ${{ steps.translate.outputs.translated-files }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Skipped files**: ${{ steps.translate.outputs.skipped-files }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -n "${{ steps.translate.outputs.pr-url }}" ]; then
          echo "- **Pull Request**: [${{ steps.translate.outputs.pr-number }}](${{ steps.translate.outputs.pr-url }})" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ steps.translate.outputs.translated-files }}" != "0" ]; then
          echo "- **Artifact**: Translated files uploaded as artifact 'translated-docs-${{ github.run_number }}'" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Result**: No changes detected" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ inputs.debug_mode }}" = "true" ]; then
          echo "- **Debug files**: Uploaded as artifact 'debug-files-${{ github.run_number }}'" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### 📋 Workflow Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Debug Mode**: ${{ inputs.debug_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **PR Title**: ${{ inputs.pr_title }}" >> $GITHUB_STEP_SUMMARY
